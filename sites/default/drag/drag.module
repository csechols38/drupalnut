<?php


/**
 *
 */
function drag_menu(){
	$items = array();
	$items['drag/ajax/block/%/%/%/%/%'] = array(
		'page callback' => '_drag_load_render_block',
		'page arguments' => array(3, 4, 5, 6, 7),
		'access callback' => TRUE,
		'type' => MENU_CALLBACK,
	);
	$items['drag/ajax/update/%/%'] = array(
		'page callback' => '_drag_update_dragged_block',
		'page arguments' => array(3, 4),
		'access callback' => TRUE,
		'type' => MENU_CALLBACK,
	);
	return $items;
}



//menu callback to update our blocks
function _drag_update_dragged_block($bid = NULL, $region = NULL, $weight = NULL){
	$updated = array(
		'updated' => FALSE,
	);
	dpm($bid);
	dpm($region);
	dpm($weight);
	if(!empty($bid) && !empty($region) && isset($weight)){
		$update = new DragLayout();
		$updated['updated'] = $update->updateBlockSettings($bid, $region, $weight);
	}
	drupal_json_output($updated);
}





//ajax callback
function _drag_load_render_block($ajax = TRUE, $delta = NULL, $module = NULL, $bid = NULL, $weight = NULL){
	switch($ajax){
	case 'ajax':
		$block = block_load($module, $delta);
		$block = module_invoke($module, 'block_view', $delta);
		$render_block = render($block);
		if(!is_array($block['content'])){
			$render_block = $block['content'];
		}
		$html = '<div class="replace-with-drag-block"></div>';
		$html .= '<div id="drag-block-container">';
		$html .= '<div class="drag-block-container" id="'. $delta .'" drag-bid="'.$bid.'" drag-delta="'.$delta.'" drag-weight="'.$weight.'">'.$render_block.'</div>';
		$html .= '</div>';
		$commands[] = ajax_command_replace('#drag-block-container', $html);
		$page = array('#type' => 'ajax', '#commands' => $commands);
		ajax_deliver($page);
		break;
	default:
		$output = t("This is some content delivered via a page load.");
		return $output;
		break;
	}
}






class DragLayout{

	public $theme_key;
	public $regions;
	public $block_region_list;
	public $block_list;

	//get the themekey
	public function getThemeKey(){
		global $theme_key;
		$this->theme_key = $theme_key;
	}

	//get our regions
	public function getRegions($theme_key = NULL){
		$theme_key = !empty($theme_key) ? $theme_key : $this->theme_key;
		if(isset($theme_key)){
			$this->regions = system_region_list($theme_key);
		}
	}


	//get a list of blocks and regions
	public function getBlockRegionList($regions = NULL){
		$blocks = array();
		$regions = !empty($regions) ? $regions : $this->regions;
		if(isset($regions)){
			foreach($regions as $machine_name => $block_title) {
				$blocks += block_list($machine_name);
			}
		}
		$this->block_region_list = $blocks;
	}


	//get a list of all the blocks
	public function getBLockList($theme = NULL){
		$theme = !empty($theme) ? $theme : $this->theme_key;
		$blocks = array();
		$result = db_query('SELECT * FROM {block} WHERE `theme` = :current_theme', array(':current_theme' => $theme));
		// Fetch next row as a stdClass object.
		while ($data = $result->fetchObject()) {
			$blocks[] = $result->fetchObject();
		}
		$this->blocks_list = $blocks;
	}


	public static function formatBlockList($blocks){
		$items = array();
		if(!empty($blocks)){
			foreach($blocks as $delta => $block){
				foreach($block as $key => $value){
						$module = NULL;
						$bid = NULL;
						$weight = NULL;
						if(!empty($block->module)){
							$module = $block->module;
						}
						if(!empty($block->bid)){
							$bid = $block->bid;
						}
						if(!empty($block->weight)){
							$weight = $block->weight;
						}
						switch($key){
						case 'delta':
							if(isset($value)){
								$items[$delta]['data'] = l(t($value), 'drag/ajax/block/nojs/'. $value .'/'. $module .'/'. $bid .'/'. $weight .'', array('attributes' => array('class' => array('use-ajax'))));
							}
							break;
						case 'weight':
							if(isset($value)){
								$items[$delta]['drag-weight'] = $value;
							}
							break;
						case 'region':
							if(isset($value)){
								$items[$delta]['drag-region'] = $value;
							}
							break;
						case 'bid':
							if(isset($value)){
								$items[$delta]['drag-bid'] = $value;
							}
							break;
						$items[$delta]['class'] = array('drag-li-block');
					}
				}
			}
		}
		return $items;
	}


	//update our block settings
	public function updateBlockSettings($bid, $region, $weight){
		$update = db_update('block')
		->fields(array(
				//'module' => 'system',
				//'delta' => 'main-menu', // block delta, find in database or module that defines it
				//'theme' => 'mytheme', // theme to configure
				'region' => $region, // region declared in  theme
				'status' => 1,
				//'pages' => '',
				'weight' => $weight,
			)
		)
		->condition('bid', $bid, '=')
		->execute();
		if($update){
			return TRUE;
		}else{
			return FALSE;
		}
	}

}



/**
 *
 */
function drag_page_alter(&$page){

	// Add libraries
	drupal_add_library('system', 'drupal.ajax');
	drupal_add_library('system', 'jquery.form');
	drupal_add_js('misc/ui/jquery.ui.core.min.js', array('weight' => -100));
	drupal_add_js('misc/ui/jquery.ui.droppable.min.js', array('weight' => -100));

	$layout = new DragLayout();
	$layout->getThemeKey();
	$layout->getRegions();
	$layout->getBlockRegionList();
	$layout->getBLockList(NULL);
	$items = $layout::formatBlockList($layout->blocks_list);

	//add our css / js
	drupal_add_js(array('drag' => array('blackWeight' => '')), 'setting');
	drupal_add_css(drupal_get_path('module', 'drag') . '/css/drag.css', array('type' => 'file', 'weight' => 100, 'region' => 'footer'));
	drupal_add_js(drupal_get_path('module', 'drag') . '/js/drag_block.js', array('type' => 'file', 'weight' => 98, 'region' => 'footer'));
	drupal_add_js(drupal_get_path('module', 'drag') . '/js/drag_sidebar.js', array('type' => 'file', 'weight' => 99, 'region' => 'footer'));



	//demonstrate regions
	$visible_regions = $layout->regions;
	foreach ($visible_regions as $delta => $region) {
		$description = '<div class="drag-block-region">'. $region .'</div><div id="'. $delta .'" class="region-delta"></div>';
		$page[$delta]['block_description'] = array(
			'#markup' => $description,
			'#weight' => 15,
		);
	}

	//our sidebar render array
	$side_bar = array();
	$side_bar['block_container'] = array(
		'#type' => 'markup',
		'#markup' => '',
		'#prefix' => '<div id="drag-block-container">',
		'#suffix' => '</div>',
		'#weight' => -100,
	);
	//the sidebar wrapper
	$side_bar['wrapper'] = array(
		'#type' => 'container',
		'#attributes' => array(
			'id' => 'drag-module-sidebar-wrapper',
		),
	);
	//add the items to our list
	$side_bar['wrapper']['sidebar'] = array(
		'#title' => '<span class="drag-blocks-title drag-list-title">Blocks</span>',
		'#theme' => 'item_list',
		'#type' => 'ul',
		'#items' => $items,
		'#prefix' => '<div class="drag-module-list-wrapper">',
		'#suffix' => '</div>',
		'#attributes' => array(
			'class' => array('drag-module-list'),
		),
		'#weight' => 100,
	);
	//put our sidebar in the page for rendering
	$page['content']['system_main']['drag_sidebar'] = $side_bar;
}